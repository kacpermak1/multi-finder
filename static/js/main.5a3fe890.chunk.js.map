{"version":3,"sources":["Components/ImageResults/ImageResults.js","Components/Search/Search.js","Components/MoviesReviews/MoviesReviews.js","Components/MoviesResults/MoviesResults.js","Components/SearchMovies/SearchMovies.js","Components/Navbar/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["ImageResults","state","open","currentImg","handleOpen","img","setState","handleClose","imageList","images","this","props","GridList","cellHeight","cols","map","title","tags","key","id","subtitle","user","actionIcon","onClick","largeImageURL","color","src","alt","actions","label","primary","modal","onRequestCLose","close","style","width","Component","Search","searchText","amount","apiUrl","apiKey","error","isLoading","onTextChange","e","val","target","value","name","fetch","then","response","ok","json","Error","data","hits","catch","onAmountChange","index","randomWords","require","className","onChange","floatingLabelText","fullWidth","primaryText","length","MoviesReviews","readMoreOpen","handleClick","dots","readMoreButton","Typography","variant","author","paragraph","content","slice","useStyles","makeStyles","theme","root","maxWidth","media","height","paddingTop","expand","transform","marginLeft","transition","transitions","create","duration","shortest","expandOpen","avatar","backgroundColor","red","MoviesResults","classes","React","useState","expanded","setExpanded","reviews","setReviews","useEffect","a","res","results","err","console","log","fetchData","like","setLike","Card","CardHeader","action","aria-label","subheader","date","CardMedia","image","CardContent","component","overview","CardActions","disableSpacing","vote","clsx","aria-expanded","Collapse","in","timeout","unmountOnExit","review","SearchMovies","searchTitle","movies","onTitleChange","Grid","container","spacing","padding","movie","item","xs","sm","md","lg","xl","vote_average","release_date","poster_path","TabPanel","children","other","role","hidden","aria-labelledby","Box","p","a11yProps","LinkTab","Tab","event","preventDefault","flexGrow","palette","background","paper","NavTabs","setValue","AppBar","position","Tabs","newValue","href","App","Navbar","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5a3fe890.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { GridList, GridTile } from 'material-ui/GridList';\nimport IconButton from 'material-ui/IconButton';\nimport ZoomIn from 'material-ui/svg-icons/action/zoom-in';\nimport Dialog from 'material-ui/Dialog';\nimport FlatButton from 'material-ui/FlatButton';\n\nclass ImageResults extends Component {\n\n    state = {\n        open: false,\n        currentImg: ''\n    }\n\n    handleOpen = (img) => {\n        this.setState({ open: true, currentImg: img })\n    }\n\n    handleClose = () => {\n        this.setState({ open: false })\n    }\n\n    render() {\n\n        let imageList;\n        const { images } = this.props;\n\n        if (images) {\n            imageList = (\n                <GridList cellHeight={220} cols={3} >\n                    {images.map(img => (\n                        <GridTile title={img.tags} key={img.id} subtitle={\n                            <span>by <strong>{img.user}</strong></span>}\n                            actionIcon={<IconButton onClick={() => this.handleOpen(img.largeImageURL)}><ZoomIn color=\"white\" /></IconButton>}>\n                            <img src={img.largeImageURL} alt={img.tags} />\n                        </GridTile>\n                    ))}\n                </GridList>\n            )\n        } else {\n            imageList = null\n        }\n\n        const actions = [\n            <FlatButton label=\"close\" primary={true} onClick={this.handleClose} />\n        ]\n\n        return <div>{imageList}\n            <Dialog actions={actions}\n                modal={false}\n                open={this.state.open}\n                onRequestCLose={this.state.close}>\n                <img src={this.state.currentImg} alt='' style={{ width: \"100%\" }} />\n            </Dialog>\n        </div>\n    }\n}\n\nImageResults.propTypes = {\n    images: PropTypes.array.isRequired\n}\n\nexport default ImageResults;\n","import React, { Component } from 'react';\nimport TextField from 'material-ui/TextField';\nimport SelectField from 'material-ui/SelectField';\nimport MenuItem from 'material-ui/MenuItem';\nimport ImageResults from '../ImageResults/ImageResults';\n\nclass Search extends Component {\n\n    state = {\n        searchText: '',\n        amount: 15,\n        apiUrl: 'https://pixabay.com/api',\n        apiKey: '15164621-e9e63a50c846d79421bd72c77',\n        images: [],\n        error: false,\n        isLoading: true\n    }\n\n    componentDidMount() {\n\n        const randomWords = require('random-words')\n        fetch(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${randomWords(1)[0]}&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\n            .then(response => {\n                if (response.ok) {\n                    return response.json();\n                } else {\n                    throw new Error('Something went wrong ...');\n                }\n            })\n            .then(data => this.setState({ images: data.hits, isLoading: false }))\n            .catch(error => this.setState({ error: true, isLoading: false }));\n    }\n\n    onTextChange = (e) => {\n        const val = e.target.value;\n        this.setState({ [e.target.name]: val }, () => {\n            if (val === '') { this.setState({ images: [] }) } else {\n                fetch(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\n                    .then(response => {\n                        if (response.ok) {\n                            return response.json();\n                        } else {\n                            throw new Error('Something went wrong ...');\n                        }\n                    })\n                    .then(data => this.setState({ images: data.hits, isLoading: false }))\n                    .catch(error => this.setState({ error: true, isLoading: false }));\n            }\n        }\n        )\n    }\n\n    onAmountChange = (e, index, val) => {\n        this.setState({ amount: val }, () => {\n            if (this.state.searchText) {\n                fetch(`${this.state.apiUrl}/?key=${this.state.apiKey}&q=${this.state.searchText}&image_type=photo&per_page=${this.state.amount}&safesearch=true`)\n                    .then(response => {\n                        if (response.ok) {\n                            return response.json();\n                        } else {\n                            throw new Error('Something went wrong ...');\n                        }\n                    })\n                    .then(data => this.setState({ images: data.hits, isLoading: false }))\n                    .catch(error => this.setState({ error: true, isLoading: false }))\n            }\n        })\n\n    }\n\n    render() {\n\n        return (\n            <div className=\"container\">\n                <TextField name=\"searchText\" value={this.state.searchText} onChange={this.onTextChange} floatingLabelText=\"search for images\" fullWidth={true} />\n                <br />\n                <SelectField name=\"amount\" floatingLabelText=\"Amount\" value={this.state.amount} onChange={this.onAmountChange}>\n                    <MenuItem value={5} primaryText=\"5\" />\n                    <MenuItem value={10} primaryText=\"10\" />\n                    <MenuItem value={15} primaryText=\"15\" />\n                    <MenuItem value={20} primaryText=\"20\" />\n                    <MenuItem value={25} primaryText=\"25\" />\n                </SelectField>\n                <br />\n                {this.state.images.length > 0 ? <ImageResults images={this.state.images} /> : null}\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React, { Component } from 'react';\nimport Typography from '@material-ui/core/Typography';\n\nclass MoviesReviews extends Component {\n\n    state = {\n        readMoreOpen: false\n    }\n\n    handleClick = () => {\n        this.setState({ readMoreOpen: !this.state.readMoreOpen })\n    }\n\n    render() {\n\n        const dots = this.state.readMoreOpen? \"\" : \"...\";\n        const readMoreButton = <p className=\"read_more_button\">{this.state.readMoreOpen? \" Show less\" : \"Read more\"}</p>;\n\n        return (\n            <div key={this.props.id} >\n                <Typography variant=\"h5\">{this.props.author}</Typography>\n                <Typography paragraph>{this.props.content.length > 129 ? <p>{this.props.content.slice(0, 130)}{dots}<span onClick={this.handleClick}>{this.state.readMoreOpen ? <>{this.props.content.slice(130, this.props.content.length)}{readMoreButton}</> : readMoreButton}</span></p> : this.props.content}<br/></Typography>\n            </div>\n        )\n    }\n}\n\nexport default MoviesReviews;\n","import React, { useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport MoviesReview from '../MoviesReviews/MoviesReviews';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        maxWidth: 345,\n    },\n    media: {\n        height: 0,\n        paddingTop: '56.25%', // 16:9\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    },\n    avatar: {\n        backgroundColor: red[500],\n    },\n}));\n\nfunction MoviesResults(props) {\n    const classes = useStyles();\n    const [expanded, setExpanded] = React.useState(false);\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded);\n    };\n\n    const [reviews, setReviews] = React.useState([])\n\n    useEffect(() => {\n        async function fetchData() {\n            setReviews(\n                await fetch(`https://api.themoviedb.org/3/movie/${props.id}/reviews?api_key=fdfd76b83d61c6a42b476b1cf05cc0d8&language=en-US&page=1`)\n                    .then(res => res.json())\n                    .then(res => res.results)\n                    .catch(err => console.log(err, \"something went wrong\"))\n            )\n        }\n        fetchData();\n    }, [])\n\n    const [like, setLike] = React.useState(false);\n\n    return (\n        <Card className={classes.root}>\n            <CardHeader\n                action={\n                    <IconButton aria-label=\"settings\">\n                        <MoreVertIcon />\n                    </IconButton>\n                }\n                title={props.title}\n                subheader={props.date}\n            />\n            <CardMedia\n                className={classes.media}\n                image={props.image}\n                title=\"movie image\"\n            />\n            <CardContent>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                    {props.overview}\n                </Typography>\n            </CardContent>\n            <CardActions disableSpacing>\n                <IconButton aria-label=\"add to favorites\" onClick={()=> setLike(!like)}>\n                    <FavoriteIcon style={like? {color:\"rgb(255, 64, 128)\"} : null} />\n                </IconButton>\n                <span style={{ color: \"rgba(0, 0, 0, 0.54)\" }}>{props.vote}</span>\n                <IconButton\n                    className={clsx(classes.expand, {\n                        [classes.expandOpen]: expanded,\n                    })}\n                    onClick={handleExpandClick}\n                    aria-expanded={expanded}\n                    aria-label=\"show more\"\n                >\n                    <ExpandMoreIcon />\n                </IconButton>\n            </CardActions>\n            <Collapse in={expanded} timeout=\"auto\" unmountOnExit>\n                <CardContent>\n                    <Typography paragraph>Reviews:</Typography>\n                    {reviews.length ? \"\" : <Typography paragraph>No reviews</Typography>}\n                {reviews.map(review => <MoviesReview author={review.author} id={review.id} content={review.content}/>)}\n                </CardContent>\n            </Collapse>\n        </Card>\n    );\n}\n\nexport default MoviesResults;","import React, { Component } from 'react'\nimport TextField from 'material-ui/TextField';\nimport MoviesResults from '../MoviesResults/MoviesResults';\nimport Grid from '@material-ui/core/Grid';\n\nclass SearchMovies extends Component {\n\n    state = {\n        searchTitle: '',\n        movies: [],\n        error: false,\n        isLoading: true\n    }\n\n    onTitleChange = (e) => {\n        const val = e.target.value;\n        this.setState({ [e.target.name]: val }, () => {\n            if (val === '') { this.setState({ movies: [] }) } else {\n                fetch(`https://api.themoviedb.org/3/search/movie?api_key=fdfd76b83d61c6a42b476b1cf05cc0d8&query=${this.state.searchTitle}`)\n                    .then(response => {\n                        if (response.ok) {\n                            return response.json();\n                        } else {\n                            throw new Error('Something went wrong ...');\n                        }\n                    })\n                    .then(data => this.setState({ movies: data.results, isLoading: false }))\n                    .catch(error => this.setState({ error: true, isLoading: false }));\n            }\n        }\n        )\n    }\n\n    render() {\n\n        const { movies } = this.state\n\n        return (\n            <div className=\"container\">\n                <TextField name=\"searchTitle\" value={this.state.searchTitle} onChange={this.onTitleChange} floatingLabelText=\"search for movies\" fullWidth={true} />\n                <br />\n                <Grid container spacing={10} style={{padding:'20px'}}>\n                {this.state.movies.length > 0 ? movies.map(movie => <Grid key={movie.id} item xs={12} sm={6} md={4} lg={4} xl={3}><MoviesResults title={movie.title} vote={movie.vote_average} overview={movie.overview} date={\"Released \"+movie.release_date} id={movie.id} image={\"https://image.tmdb.org/t/p/w500\"+movie.poster_path}/></Grid> ): null}\n                </Grid>\n            </div>\n            \n\n        )\n    }\n}\n\nexport default SearchMovies;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Tabs from '@material-ui/core/Tabs';\nimport Tab from '@material-ui/core/Tab';\nimport Typography from '@material-ui/core/Typography';\nimport Box from '@material-ui/core/Box';\nimport Search from '../Search/Search';\nimport SearchMovies from '../SearchMovies/SearchMovies';\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n\n  return (\n    <Typography\n      component=\"div\"\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`nav-tabpanel-${index}`}\n      aria-labelledby={`nav-tab-${index}`}\n      {...other}\n    >\n      {value === index && <Box p={3}>{children}</Box>}\n    </Typography>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired,\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `nav-tab-${index}`,\n    'aria-controls': `nav-tabpanel-${index}`,\n  };\n}\n\nfunction LinkTab(props) {\n  return (\n    <Tab\n      component=\"a\"\n      onClick={event => {\n        event.preventDefault();\n      }}\n      {...props}\n    />\n  );\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nfunction NavTabs() {\n  const classes = useStyles();\n  const [value, setValue] = React.useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Tabs variant=\"fullWidth\" value={value} onChange={handleChange} aria-label=\"nav tabs example\">\n          <LinkTab label=\"Pictures\" href=\"/\" {...a11yProps(0)} />\n          <LinkTab label=\"Movies\" href=\"/movies\" {...a11yProps(1)} />\n          <LinkTab label=\"Music\" href=\"/music\" {...a11yProps(2)} />\n        </Tabs>\n      </AppBar>\n      <TabPanel value={value} index={0}>\n          <Search/>\n      </TabPanel>\n      <TabPanel value={value} index={1}>\n          <SearchMovies/>\n      </TabPanel>\n      <TabPanel value={value} index={2}>\n      </TabPanel>\n    </div>\n  );\n}\n\nexport default NavTabs\n","import React from 'react';\nimport Navbar from './Components/Navbar/Navbar';\n\nconst App = () => {\n  return (\n\n      <Navbar />\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';\nimport './main.css';\n\nReactDOM.render(<MuiThemeProvider><App /></MuiThemeProvider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}